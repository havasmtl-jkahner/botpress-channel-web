{"version":3,"sources":["webpack:///webpack/bootstrap fab95e97f2a5ca495bef","webpack:///external \"lodash\"","webpack:///external \"bluebird\"","webpack:///external \"moment\"","webpack:///./src/db.js","webpack:///external \"path\"","webpack:///./src/users.js","webpack:///./src/index.js","webpack:///./src/umm.js","webpack:///external \"util\"","webpack:///external \"mime\"","webpack:///./src/api.js","webpack:///external \"multer\"","webpack:///external \"multer-s3\"","webpack:///external \"aws-sdk\"","webpack:///./src/inject.js","webpack:///./src/inject.css","webpack:///external \"serve-static\"","webpack:///external \"uuid\"","webpack:///external \"ms\"","webpack:///external \"botpress\"","webpack:///./src/util.js","webpack:///external \"sillyname\"","webpack:///./package.json","webpack:///./src/socket.js"],"names":["userInitiatedMessageTypes","module","exports","knex","config","userId","where","platform","then","get","user","name","first_name","last_name","avatar","picture_url","fullName","avatar_url","getUserInfo","conversationId","type","text","raw","data","id","select","limit","convo","Error","message","v4","full_name","message_type","message_text","message_raw","json","set","message_data","sent_on","date","now","shouldUpdateLastHeard","includes","toLowerCase","join","insert","update","last_heard_on","Date","appendUserMessage","botName","botAvatar","Object","assign","appendBotMessage","originatesFromUserMessage","uid","Math","random","toString","substr","title","created_on","conversation","createConversation","description","logoUrl","logo_url","patchConversation","ignoreLifetimeExpiry","recentCondition","isAfter","subtract","RECENT_CONVERSATION_LIFETIME","whereNotNull","andWhere","orderBy","getOrCreateRecentConversation","conversations","conversationIds","map","c","lastMessages","from","distinct","isLite","lastMessagesDate","whereIn","groupBy","as","leftJoin","listConversations","fromId","condition","getConversationMessages","messages","forEach","m","getConversation","recentConversationLifetime","client","initialize","createTableIfNotExists","table","increments","primary","string","timestamp","integer","jsonb","binary","query","bp","throwIfNotFound","realUserId","startsWith","createNewUser","getOrCreateUser","getUserProfile","split","db","saveUser","profile_pic","uploadsUseS3","required","default","env","uploadsS3Bucket","uploadsS3Region","uploadsS3AWSAccessKey","uploadsS3AWSAccessSecret","startNewConvoOnTimeout","init","configurator","loadAll","webchat","ready","QUICK_REPLY_PAYLOAD","getUserId","event","processQuickReplies","qrs","blocName","isArray","isString","qr","test","exec","payload","toUpperCase","loginPrompt","instruction","options","buildObjectRaw","PromisifyEvent","uploadFile","url","extension","extname","mimeType","getType","basename","storage","mime","carousel","customEvent","custom_type","custom_data","defaultText","isNil","to","pick","elements","encryptIfRequired","obj","Array","i","length","prop","encrypt","payloadToEncrypt","expire","add","unix","encrypted","crypto","JSON","stringify","processForm","formElement","hasOwnProperty","field","label","input","placeholder","subtype","maxlength","minlength","textarea","_promise","resolve","reject","_resolve","_reject","processOutgoing","ins","optionsList","quick_replies","form","strRep","inspect","getTemplates","at","renderers","registerConnector","args","templates","ERR_USER_ID_REQ","ERR_MSG_TYPE","ERR_CONV_ID_REQ","sanitizedPayload","sanitizeIncomingMessage","persistedPayload","omit","formId","__room","events","emit","decrypted","parse","decrypt","slice","action","dest","flow","shift","node","dialogEngine","jumpTo","middlewares","sendIncoming","sendNewMessage","validateUserId","diskStorage","limits","files","fileSize","filename","req","file","cb","ext","originalname","getTime","upload","awsConfig","region","credentials","accessKeyId","secretAccessKey","s3","S3","s3Storage","bucket","contentType","AUTO_CONTENT_TYPE","cacheControl","acl","key","router","getRouter","auth","asyncApi","res","next","fn","logger","error","stack","status","send","pkg","require","modulePath","_loadedModules","root","staticFolder","use","post","params","body","parseInt","sendStatus","single","location","mimetype","size","stateManager","deleteState","webchatUrlQuery","ref","getState","state","newState","setState","getMessageContent","convertToTxtFile","timeFormat","metadata","format","messagesAsTxt","txt","sanitizeUserId","replace","outgoingTypes","typing","parseTyping","socketId","timeInMs","delay","botAvatarUrl","outgoingHandler","register","order","handler","msg","isNaN","max"],"mappings":"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","file":"node.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/Users/emirotin/work/botpress/packages/channels/botpress-channel-web\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fab95e97f2a5ca495bef","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"bluebird\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"moment\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment\"\n// module id = 2\n// module chunks = 0","import moment from 'moment'\nimport Promise from 'bluebird'\nimport _ from 'lodash'\nimport uuid from 'uuid'\nimport ms from 'ms'\n\nimport { DatabaseHelpers as helpers } from 'botpress'\n\nimport { sanitizeUserId } from './util'\n\nconst userInitiatedMessageTypes = ['message', 'text', 'image', 'login_prompt', 'quick_reply', 'form', 'file', 'video']\n\nmodule.exports = (knex, config) => {\n  const RECENT_CONVERSATION_LIFETIME = ms(config.recentConversationLifetime)\n\n  const isLite = knex => {\n    return knex.client.config.client === 'sqlite3'\n  }\n\n  async function getUserInfo(userId) {\n    const user = await knex('users')\n      .where({ platform: 'webchat', userId: sanitizeUserId(userId) })\n      .then()\n      .get(0)\n    const name = user && `${user.first_name} ${user.last_name}`\n    const avatar = (user && user.picture_url) || null\n\n    return {\n      fullName: name,\n      avatar_url: avatar\n    }\n  }\n\n  function initialize() {\n    if (!knex) {\n      throw new Error('you must initialize the database before')\n    }\n\n    return helpers(knex)\n      .createTableIfNotExists('web_conversations', function(table) {\n        table.increments('id').primary()\n        table.string('userId')\n        table.string('title')\n        table.string('description')\n        table.string('logo_url')\n        table.timestamp('created_on')\n        table.timestamp('last_heard_on') // The last time the user interacted with the bot. Used for \"recent\" conversation\n        table.timestamp('user_last_seen_on')\n        table.timestamp('bot_last_seen_on')\n      })\n      .then(function() {\n        return helpers(knex).createTableIfNotExists('web_messages', function(table) {\n          table.string('id').primary()\n          table.integer('conversationId')\n          table.string('userId')\n          table.string('message_type')\n          table.text('message_text')\n          table.jsonb('message_raw')\n          table.binary('message_data') // Only useful if type = file\n          table.string('full_name')\n          table.string('avatar_url')\n          table.timestamp('sent_on')\n        })\n      })\n  }\n\n  async function appendUserMessage(userId, conversationId, { type, text, raw, data }) {\n    userId = sanitizeUserId(userId)\n\n    const { fullName, avatar_url } = await getUserInfo(userId)\n\n    const convo = await knex('web_conversations')\n      .where({ userId, id: conversationId })\n      .select('id')\n      .limit(1)\n      .then()\n      .get(0)\n\n    if (!convo) {\n      throw new Error(`Conversation \"${conversationId}\" not found`)\n    }\n\n    const message = {\n      id: uuid.v4(),\n      conversationId,\n      userId,\n      full_name: fullName,\n      avatar_url,\n      message_type: type,\n      message_text: text,\n      message_raw: helpers(knex).json.set(raw),\n      message_data: helpers(knex).json.set(data),\n      sent_on: helpers(knex).date.now()\n    }\n\n    const shouldUpdateLastHeard = _.includes(userInitiatedMessageTypes, type.toLowerCase())\n\n    return Promise.join(\n      knex('web_messages')\n        .insert(message)\n        .then(),\n\n      shouldUpdateLastHeard &&\n        knex('web_conversations')\n          .where({ id: conversationId, userId: userId })\n          .update({ last_heard_on: helpers(knex).date.now() })\n          .then(),\n\n      () => ({\n        ...message,\n        sent_on: new Date(),\n        message_raw: raw,\n        message_data: data\n      })\n    )\n  }\n\n  async function appendBotMessage(botName, botAvatar, conversationId, { type, text, raw, data }) {\n    const message = {\n      id: uuid.v4(),\n      conversationId: conversationId,\n      userId: null,\n      full_name: botName,\n      avatar_url: botAvatar,\n      message_type: type,\n      message_text: text,\n      message_raw: helpers(knex).json.set(raw),\n      message_data: helpers(knex).json.set(data),\n      sent_on: helpers(knex).date.now()\n    }\n\n    await knex('web_messages')\n      .insert(message)\n      .then()\n\n    return Object.assign(message, {\n      sent_on: new Date(),\n      message_raw: helpers(knex).json.get(message.message_raw),\n      message_data: helpers(knex).json.get(message.message_data)\n    })\n  }\n\n  async function createConversation(userId, { originatesFromUserMessage } = {}) {\n    userId = sanitizeUserId(userId)\n\n    const uid = Math.random()\n      .toString()\n      .substr(2, 6)\n    const title = `Conversation ${uid}`\n\n    await knex('web_conversations')\n      .insert({\n        userId,\n        created_on: helpers(knex).date.now(),\n        last_heard_on: originatesFromUserMessage ? helpers(knex).date.now() : null,\n        title\n      })\n      .then()\n\n    const conversation = await knex('web_conversations')\n      .where({ title, userId })\n      .select('id')\n      .then()\n      .get(0)\n\n    return conversation && conversation.id\n  }\n\n  async function patchConversation(userId, conversationId, title, description, logoUrl) {\n    userId = sanitizeUserId(userId)\n\n    await knex('web_conversations')\n      .where({ userId, id: conversationId })\n      .update({\n        title,\n        description,\n        logo_url: logoUrl\n      })\n      .then()\n  }\n\n  async function getOrCreateRecentConversation(userId, { ignoreLifetimeExpiry, originatesFromUserMessage } = {}) {\n    userId = sanitizeUserId(userId)\n\n    const recentCondition =\n      !ignoreLifetimeExpiry &&\n      helpers(knex).date.isAfter('last_heard_on', moment().subtract(RECENT_CONVERSATION_LIFETIME, 'ms'))\n\n    const conversation = await knex('web_conversations')\n      .select('id')\n      .whereNotNull('last_heard_on')\n      .andWhere({ userId })\n      .andWhere(recentCondition || {})\n      .orderBy('last_heard_on', 'desc')\n      .limit(1)\n      .then()\n      .get(0)\n\n    return conversation ? conversation.id : createConversation(userId, { originatesFromUserMessage })\n  }\n\n  async function listConversations(userId) {\n    userId = sanitizeUserId(userId)\n\n    const conversations = await knex('web_conversations')\n      .select('id')\n      .where({ userId })\n      .orderBy('last_heard_on', 'desc')\n      .limit(100)\n      .then()\n\n    const conversationIds = conversations.map(c => c.id)\n\n    let lastMessages = knex\n      .from('web_messages')\n      .distinct(knex.raw('ON (\"conversationId\") *'))\n      .orderBy('conversationId')\n      .orderBy('sent_on', 'desc')\n\n    if (isLite(knex)) {\n      const lastMessagesDate = knex('web_messages')\n        .whereIn('conversationId', conversationIds)\n        .groupBy('conversationId')\n        .select(knex.raw('max(sent_on) as date'))\n\n      lastMessages = knex\n        .from('web_messages')\n        .select('*')\n        .whereIn('sent_on', lastMessagesDate)\n    }\n\n    return knex\n      .from(function() {\n        this.from('web_conversations')\n          .where({ userId })\n          .as('wc')\n      })\n      .leftJoin(lastMessages.as('wm'), 'wm.conversationId', 'wc.id')\n      .orderBy('wm.sent_on', 'desc')\n      .select(\n        'wc.id',\n        'wc.title',\n        'wc.description',\n        'wc.logo_url',\n        'wc.created_on',\n        'wc.last_heard_on',\n        'wm.message_type',\n        'wm.message_text',\n        knex.raw('wm.full_name as message_author'),\n        knex.raw('wm.avatar_url as message_author_avatar'),\n        knex.raw('wm.sent_on as message_sent_on')\n      )\n  }\n\n  async function getConversation(userId, conversationId, fromId = null) {\n    userId = sanitizeUserId(userId)\n\n    const condition = { userId: userId }\n\n    if (conversationId && conversationId !== 'null') {\n      condition.id = conversationId\n    }\n\n    const conversation = await knex('web_conversations')\n      .where(condition)\n      .then()\n      .get(0)\n\n    if (!conversation) {\n      return null\n    }\n\n    const messages = await getConversationMessages(conversationId, fromId)\n\n    messages.forEach(m => {\n      return Object.assign(m, {\n        message_raw: helpers(knex).json.get(m.message_raw),\n        message_data: helpers(knex).json.get(m.message_data)\n      })\n    })\n\n    return Object.assign({}, conversation, {\n      messages: _.orderBy(messages, ['sent_on'], ['asc'])\n    })\n  }\n\n  function getConversationMessages(conversationId, fromId = null) {\n    let query = knex('web_messages').where({ conversationId: conversationId })\n\n    if (fromId) {\n      query = query.andWhere('id', '<', fromId)\n    }\n\n    return query\n      .orderBy('sent_on', 'desc')\n      .limit(20)\n      .then()\n  }\n\n  return {\n    initialize,\n    appendUserMessage,\n    appendBotMessage,\n    createConversation,\n    patchConversation,\n    getConversation,\n    listConversations,\n    getOrCreateRecentConversation,\n    isLite\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/db.js","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 4\n// module chunks = 0","import sillyname from 'sillyname'\n\nmodule.exports = async bp => {\n  const knex = await bp.db.get()\n\n  async function getOrCreateUser(userId, throwIfNotFound = false) {\n    const realUserId = userId.startsWith('webchat:') ? userId.substr(8) : userId\n\n    const user = await knex('users')\n      .where({\n        platform: 'webchat',\n        userId: realUserId\n      })\n      .then()\n      .get(0)\n\n    if (user) {\n      return user\n    }\n\n    if (throwIfNotFound) {\n      throw new Error(`User ${realUserId} not found`)\n    }\n\n    await createNewUser(realUserId)\n    return getOrCreateUser(realUserId, true)\n  }\n\n  async function getUserProfile(userId) {\n    const realUserId = userId.startsWith('webchat:') ? userId.substr(8) : userId\n\n    const user = await knex('users')\n      .where({\n        platform: 'webchat',\n        userId: realUserId\n      })\n      .then()\n      .get(0)\n\n    return user\n  }\n\n  function createNewUser(userId) {\n    const [first_name, last_name] = sillyname().split(' ')\n\n    return bp.db.saveUser({\n      first_name,\n      last_name,\n      profile_pic: null,\n      id: userId,\n      platform: 'webchat'\n    })\n  }\n\n  return { getOrCreateUser, getUserProfile }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/users.js","import umm from './umm'\nimport api from './api'\nimport socket from './socket'\nimport db from './db'\n\nmodule.exports = {\n  config: {\n    uploadsUseS3: { type: 'bool', required: false, default: false, env: 'WEBCHAT_USE_S3' },\n    uploadsS3Bucket: { type: 'string', required: false, default: 'bucket-name', env: 'WEBCHAT_S3_BUCKET' },\n    uploadsS3Region: { type: 'any', required: false, default: null, env: 'WEBCHAT_S3_REGION' },\n    uploadsS3AWSAccessKey: { type: 'any', required: false, default: null, env: 'WEBCHAT_S3_ACCESS_KEY' },\n    uploadsS3AWSAccessSecret: { type: 'any', required: false, default: null, env: 'WEBCHAT_S3_KEY_SECRET' },\n    startNewConvoOnTimeout: {\n      type: 'bool',\n      required: false,\n      default: false,\n      env: 'WEBCHAT_START_NEW_CONVO_ON_TIMEOUT'\n    },\n    recentConversationLifetime: {\n      type: 'any',\n      required: false,\n      default: '6 hours',\n      env: 'WEBCHAT_RECENT_CONVERSATION_LIFETIME'\n    }\n  },\n\n  init: async function(bp, configurator) {\n    const config = await configurator.loadAll()\n\n    bp.webchat = {}\n\n    // Setup the socket events\n    await socket(bp, config)\n\n    // Initialize UMM\n    return umm(bp)\n  },\n\n  ready: async function(bp, configurator) {\n    const config = await configurator.loadAll()\n\n    // Initialize the database\n    const knex = await bp.db.get()\n    db(knex, config).initialize()\n\n    // Setup the APIs\n    await api(bp, config)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import util from 'util'\nimport _ from 'lodash'\nimport Promise from 'bluebird'\nimport path from 'path'\nimport mime from 'mime'\nimport moment from 'moment'\n\nconst QUICK_REPLY_PAYLOAD = /\\<(.+)\\>\\s(.+)/i\n\nfunction getUserId(event) {\n  const userId =\n    _.get(event, 'user.id') ||\n    _.get(event, 'user.userId') ||\n    _.get(event, 'userId') ||\n    _.get(event, 'raw.from') ||\n    _.get(event, 'raw.userId') ||\n    _.get(event, 'raw.user.id')\n\n  if (!userId) {\n    throw new Error('Could not find userId in the incoming event.')\n  }\n\n  return userId\n}\n\n// TODO Extract this logic directly to botpress's UMM\nfunction processQuickReplies(qrs, blocName) {\n  if (!_.isArray(qrs)) {\n    throw new Error('Expected quick_replies to be an array')\n  }\n\n  return qrs.map(qr => {\n    if (_.isString(qr) && QUICK_REPLY_PAYLOAD.test(qr)) {\n      let [, payload, text] = QUICK_REPLY_PAYLOAD.exec(qr)\n      // <.HELLO> becomes <BLOCNAME.HELLO>\n      if (payload.startsWith('.')) {\n        payload = blocName + payload\n      }\n\n      return {\n        title: text,\n        payload: payload.toUpperCase()\n      }\n    }\n\n    return qr\n  })\n}\n\nfunction loginPrompt(event, instruction, options) {\n  const user = getUserId(event)\n\n  const raw = buildObjectRaw(event, instruction, options, user)\n\n  return PromisifyEvent({\n    platform: 'webchat',\n    type: 'login_prompt',\n    user: { id: user },\n    raw: raw,\n    text: instruction.text\n  })\n}\n\n// - type: file\n//   url: \"https://exemple.com\"\n\nfunction uploadFile(event, instruction, options) {\n  const user = getUserId(event)\n  const url = instruction.url\n\n  // if you are working on the same url\n  // you can let absolute path for your image\n\n  const extension = path.extname(url)\n\n  const mimeType = mime.getType(extension)\n\n  const basename = path.basename(url, extension)\n\n  const raw = buildObjectRaw(event, instruction, options, user)\n\n  return PromisifyEvent({\n    platform: 'webchat',\n    type: 'file',\n    user: { id: user },\n    raw: raw,\n    text: instruction.text || basename,\n    data: {\n      storage: 'remote',\n      url: url,\n      name: basename || 'unknown',\n      mime: mimeType || 'unknown'\n    }\n  })\n}\n\nfunction carousel(event, instruction, options) {\n  const user = getUserId(event)\n\n  const raw = buildObjectRaw(event, instruction, options, user)\n\n  return PromisifyEvent({\n    platform: 'webchat',\n    type: 'carousel',\n    user: { id: user },\n    raw: raw,\n    text: instruction.text\n  })\n}\n\nfunction customEvent(event, instruction, options) {\n  const user = getUserId(event)\n  const raw = buildObjectRaw(event, instruction, options, user)\n\n  return PromisifyEvent({\n    platform: 'webchat',\n    type: 'custom',\n    user: { id: user },\n    raw: { ...raw, custom_type: instruction.type, custom_data: instruction.data },\n    text: instruction.text\n  })\n}\n\nfunction defaultText(event, instruction, options) {\n  const user = getUserId(event)\n  const raw = buildObjectRaw(event, instruction, options, user)\n\n  if (!_.isNil(instruction.text)) {\n    return PromisifyEvent({\n      platform: 'webchat',\n      type: 'text',\n      user: { id: user },\n      raw: raw,\n      text: instruction.text\n    })\n  }\n}\n\n// Build the raw obj to pass to the Promise\nfunction buildObjectRaw(event, instruction, options, user) {\n  const raw = Object.assign(\n    {\n      to: user,\n      message: instruction.text || null\n    },\n    options,\n    _.pick(event && event.raw, 'conversationId')\n  )\n\n  if (raw.elements) {\n    encryptIfRequired(raw.elements, event.bp, user)\n  }\n\n  return raw\n}\n\nfunction encryptIfRequired(obj, bp, user) {\n  if (obj instanceof Array) {\n    for (let i = 0; i < obj.length; i++) {\n      encryptIfRequired(obj[i], bp, user)\n    }\n  } else {\n    for (const prop in obj) {\n      if (prop === 'encrypt' && obj.encrypt && obj.payload) {\n        const payloadToEncrypt = {\n          userId: user,\n          expire: moment()\n            .add(1, 'hours')\n            .unix(),\n          ...obj.payload\n        }\n\n        const encrypted = bp.crypto.encrypt(JSON.stringify(payloadToEncrypt))\n\n        obj.payload = `crypt|${encrypted}`\n        delete obj.encrypt\n      }\n\n      if (obj[prop] instanceof Object || obj[prop] instanceof Array) {\n        encryptIfRequired(obj[prop], bp, user)\n      }\n    }\n  }\n}\n\nfunction processForm(formElement) {\n  if (_.isArray(formElement)) {\n    throw new Error('Expected `form` to be an object!')\n  }\n  if (!formElement.hasOwnProperty('id') || formElement.id === null) {\n    throw new Error('Expected `form.id` field')\n  }\n  if (!formElement.hasOwnProperty('elements') || !_.isArray(formElement.elements)) {\n    throw new Error('Expected `form.elements` to be an Array!')\n  }\n  return {\n    title: formElement.title,\n    id: formElement.id,\n    elements: formElement.elements.map(field => {\n      if ('input' in field) {\n        // Input field\n        return {\n          label: field.input.label,\n          placeholder: field.input.placeholder || '',\n          name: field.input.name,\n          type: 'input',\n          subtype: field.input.subtype || '',\n          maxlength: field.input.maxlength || '',\n          minlength: field.input.minlength || '',\n          required: field.input.required || false\n        }\n      } else if ('textarea' in field) {\n        // Textarea field\n        return {\n          label: field.textarea.label,\n          placeholder: field.textarea.placeholder || '',\n          name: field.textarea.name,\n          type: 'textarea',\n          maxlength: field.textarea.maxlength || '',\n          minlength: field.textarea.minlength || '',\n          required: field.textarea.required || false\n        }\n      } else if ('select' in field) {\n        // Select field\n        return {\n          label: field.select.label,\n          placeholder: field.select.placeholder || '',\n          name: field.select.name,\n          options: field.select.options,\n          required: field.select.required || false,\n          type: 'select'\n        }\n      } else {\n        throw new Error('Cannot recognize element type!')\n      }\n    })\n  }\n}\n\nfunction PromisifyEvent(event) {\n  if (!event._promise) {\n    event._promise = new Promise((resolve, reject) => {\n      event._resolve = resolve\n      event._reject = reject\n    })\n  }\n\n  return event\n}\n\nfunction processOutgoing({ event, blocName, instruction }) {\n  const ins = Object.assign({}, instruction) // Create a shallow copy of the instruction\n\n  ////////\n  // PRE-PROCESSING\n  ////////\n\n  const optionsList = ['typing', 'quick_replies', 'file', 'form', 'elements', 'web-style', 'settings', 'markdown']\n\n  const options = _.pick(instruction, optionsList)\n\n  for (const prop of optionsList) {\n    delete ins[prop]\n  }\n\n  if (options.quick_replies) {\n    options.quick_replies = processQuickReplies(options.quick_replies, blocName)\n  }\n\n  // TODO : Make a Quick_replies than handle text and picture.\n\n  if (options.form) {\n    options.form = processForm(options.form)\n  }\n  /////////\n  /// Processing\n  /////////\n\n  if (instruction.type === 'login_prompt') {\n    return loginPrompt(event, instruction, options)\n  } else if (instruction.type === 'file') {\n    return uploadFile(event, instruction, options)\n  } else if (instruction.type === 'carousel') {\n    return carousel(event, instruction, options)\n  } else if (instruction.type === 'location_picker') {\n    // TODO\n  } else if (instruction.type && instruction.type.startsWith('@')) {\n    return customEvent(event, instruction, options)\n  } else {\n    return defaultText(event, instruction, options)\n  }\n\n  ////////////\n  /// POST-PROCESSING\n  ////////////\n\n  // Nothing to post-process yet\n\n  ////////////\n  /// INVALID INSTRUCTION\n  ////////////\n\n  const strRep = util.inspect(instruction, false, 1)\n  throw new Error(`Unrecognized instruction on Web in bloc '${blocName}': ${strRep}`)\n}\n\n////////////\n/// TEMPLATES\n////////////\n\nfunction getTemplates() {\n  return []\n}\n\nmodule.exports = bp => {\n  const [renderers, registerConnector] = _.at(bp, ['renderers', 'renderers.registerConnector'])\n\n  renderers &&\n    registerConnector &&\n    registerConnector({\n      platform: 'webchat',\n      processOutgoing: args => processOutgoing(Object.assign({}, args, { bp })),\n      templates: getTemplates()\n    })\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/umm.js","module.exports = require(\"util\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"util\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"mime\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mime\"\n// module id = 10\n// module chunks = 0","import _ from 'lodash'\nimport path from 'path'\nimport multer from 'multer'\nimport multers3 from 'multer-s3'\nimport aws from 'aws-sdk'\nimport moment from 'moment'\n\nimport injectScript from 'raw-loader!./inject.js'\nimport injectStyle from 'raw-loader!./inject.css'\n\nimport serveStatic from 'serve-static'\n\nimport db from './db'\nimport users from './users'\n\nconst ERR_USER_ID_REQ = '`userId` is required and must be valid'\nconst ERR_MSG_TYPE = '`type` is required and must be valid'\nconst ERR_CONV_ID_REQ = '`conversationId` is required and must be valid'\n\nmodule.exports = async (bp, config) => {\n  const diskStorage = multer.diskStorage({\n    limits: {\n      files: 1,\n      fileSize: 5242880 // 5MB\n    },\n    filename: function(req, file, cb) {\n      const userId = _.get(req, 'params.userId') || 'anonymous'\n      const ext = path.extname(file.originalname)\n\n      cb(null, `${userId}_${new Date().getTime()}${ext}`)\n    }\n  })\n\n  let upload = multer({ storage: diskStorage })\n\n  if (config.uploadsUseS3) {\n    /*\n      You can override AWS's default settings here. Example:\n      { region: 'us-east-1', apiVersion: '2014-10-01', credentials: {...} }\n     */\n    const awsConfig = {\n      region: config.uploadsS3Region,\n      credentials: {\n        accessKeyId: config.uploadsS3AWSAccessKey,\n        secretAccessKey: config.uploadsS3AWSAccessSecret\n      }\n    }\n\n    if (!awsConfig.credentials.accessKeyId && !awsConfig.credentials.secretAccessKey) {\n      delete awsConfig.credentials\n    }\n\n    if (!awsConfig.region) {\n      delete awsConfig.region\n    }\n\n    const s3 = new aws.S3(awsConfig)\n    const s3Storage = multers3({\n      s3: s3,\n      bucket: config.uploadsS3Bucket || 'uploads',\n      contentType: multers3.AUTO_CONTENT_TYPE,\n      cacheControl: 'max-age=31536000', // one year caching\n      acl: 'public-read',\n      key: function(req, file, cb) {\n        const userId = _.get(req, 'params.userId') || 'anonymous'\n        const ext = path.extname(file.originalname)\n\n        cb(null, `${userId}_${new Date().getTime()}${ext}`)\n      }\n    })\n\n    upload = multer({ storage: s3Storage })\n  }\n\n  const knex = await bp.db.get()\n\n  const {\n    listConversations,\n    getConversation,\n    appendUserMessage,\n    getOrCreateRecentConversation,\n    createConversation\n  } = db(knex, config)\n\n  const { getOrCreateUser, getUserProfile } = await users(bp, config)\n\n  const router = bp.getRouter('botpress-platform-webchat', { auth: false })\n\n  const asyncApi = fn => async (req, res, next) => {\n    try {\n      await fn(req, res, next)\n    } catch (err) {\n      bp.logger.error(err.message, err.stack)\n      res.status(500).send(err && err.message)\n    }\n  }\n\n  router.get('/inject.js', (req, res) => {\n    res.contentType('text/javascript')\n    res.send(injectScript)\n  })\n\n  router.get('/inject.css', (req, res) => {\n    res.contentType('text/css')\n    res.send(injectStyle)\n  })\n\n  const pkg = require('../package.json')\n  const modulePath = bp._loadedModules[pkg.name].root\n  const staticFolder = path.join(modulePath, './static')\n  router.use('/static', serveStatic(staticFolder))\n\n  // ?conversationId=xxx (optional)\n  router.post(\n    '/messages/:userId',\n    asyncApi(async (req, res) => {\n      const { userId } = req.params || {}\n\n      if (!validateUserId(userId)) {\n        return res.status(400).send(ERR_USER_ID_REQ)\n      }\n\n      await getOrCreateUser(userId) // Just to create the user if it doesn't exist\n\n      const payload = req.body || {}\n      let { conversationId } = req.query || {}\n      conversationId = conversationId && parseInt(conversationId)\n\n      if (!_.includes(['text', 'quick_reply', 'form', 'login_prompt', 'visit'], payload.type)) {\n        // TODO: Support files\n        return res.status(400).send(ERR_MSG_TYPE)\n      }\n\n      if (!conversationId) {\n        conversationId = await getOrCreateRecentConversation(userId, { originatesFromUserMessage: true })\n      }\n\n      await sendNewMessage(userId, conversationId, payload)\n\n      return res.sendStatus(200)\n    })\n  )\n\n  // ?conversationId=xxx (required)\n  router.post(\n    '/messages/:userId/files',\n    upload.single('file'),\n    asyncApi(async (req, res) => {\n      const { userId } = req.params || {}\n\n      if (!validateUserId(userId)) {\n        return res.status(400).send(ERR_USER_ID_REQ)\n      }\n\n      await getOrCreateUser(userId) // Just to create the user if it doesn't exist\n\n      let { conversationId } = req.query || {}\n      conversationId = conversationId && parseInt(conversationId)\n\n      if (!conversationId) {\n        return res.status(400).send(ERR_CONV_ID_REQ)\n      }\n\n      const payload = {\n        text: `Uploaded a file [${req.file.originalname}]`,\n        type: 'file',\n        data: {\n          storage: req.file.location ? 's3' : 'local',\n          url: req.file.location || null,\n          name: req.file.originalname,\n          mime: req.file.contentType || req.file.mimetype,\n          size: req.file.size\n        }\n      }\n\n      await sendNewMessage(userId, conversationId, payload)\n\n      return res.sendStatus(200)\n    })\n  )\n\n  router.get('/conversations/:userId/:conversationId', async (req, res) => {\n    const { userId, conversationId } = req.params || {}\n\n    if (!validateUserId(userId)) {\n      return res.status(400).send(ERR_USER_ID_REQ)\n    }\n\n    const conversation = await getConversation(userId, conversationId)\n\n    return res.send(conversation)\n  })\n\n  router.get('/conversations/:userId', async (req, res) => {\n    const { userId } = req.params || {}\n\n    if (!validateUserId(userId)) {\n      return res.status(400).send(ERR_USER_ID_REQ)\n    }\n\n    await getOrCreateUser(userId) // Just to create the user if it doesn't exist\n\n    const conversations = await listConversations(userId)\n\n    return res.send({\n      conversations: [...conversations],\n      startNewConvoOnTimeout: config.startNewConvoOnTimeout,\n      recentConversationLifetime: config.recentConversationLifetime\n    })\n  })\n\n  function validateUserId(userId) {\n    return /[a-z0-9-_]+/i.test(userId)\n  }\n\n  async function sendNewMessage(userId, conversationId, payload) {\n    if (!payload.text || !_.isString(payload.text) || payload.text.length > 360) {\n      throw new Error('Text must be a valid string of less than 360 chars')\n    }\n\n    let sanitizedPayload = _.pick(payload, ['text', 'type', 'data'])\n\n    // let the bot programmer make extra cleanup\n    if (bp.webchat && bp.webchat.sanitizeIncomingMessage) {\n      sanitizedPayload = bp.webchat.sanitizeIncomingMessage(sanitizedPayload) || sanitizedPayload\n    }\n\n    // Because we don't necessarily persist what we emit/received\n    const persistedPayload = { ...sanitizedPayload }\n\n    // We remove the password from the persisted messages for security reasons\n    if (payload.type === 'login_prompt') {\n      persistedPayload.data = _.omit(persistedPayload.data, ['password'])\n    }\n\n    if (payload.type === 'form') {\n      persistedPayload.data.formId = payload.formId\n    }\n\n    const message = await appendUserMessage(userId, conversationId, persistedPayload)\n\n    Object.assign(message, {\n      __room: 'visitor:' + userId // This is used to send to the relevant user's socket\n    })\n\n    bp.events.emit('guest.webchat.message', message)\n\n    const user = await getOrCreateUser(userId)\n\n    if (payload.data && payload.data.payload) {\n      const data = payload.data.payload\n\n      if (typeof data === 'string' && data.startsWith('crypt|')) {\n        let decrypted = null\n        try {\n          decrypted = JSON.parse(bp.crypto.decrypt(data.slice(6)))\n        } catch (err) {\n          throw new Error('Error while decrypting payload', err)\n        }\n\n        if (decrypted.userId != user.id) {\n          throw new Error('The encrypted payload is for a different user')\n        }\n\n        if (moment().isAfter(moment.unix(decrypted.expire))) {\n          throw new Error('User payload expired')\n        }\n\n        if (decrypted.action === 'gotoFlow') {\n          const dest = decrypted.dest.split('#')\n          const flow = dest.shift()\n          const node = dest.shift()\n\n          await bp.dialogEngine.jumpTo(user.id, flow, node)\n        }\n      }\n    }\n\n    return bp.middlewares.sendIncoming(\n      Object.assign(\n        {\n          platform: 'webchat',\n          type: payload.type,\n          user: user,\n          text: sanitizedPayload.text,\n          raw: {\n            ...sanitizedPayload,\n            conversationId\n          }\n        },\n        payload.data\n      )\n    )\n  }\n\n  router.post(\n    '/events/:userId',\n    asyncApi(async (req, res) => {\n      const { type, payload } = req.body || {}\n      const { userId } = req.params || {}\n      const user = await getOrCreateUser(userId)\n      bp.middlewares.sendIncoming({\n        platform: 'webchat',\n        type,\n        user,\n        text: payload.text,\n        raw: _.pick(payload, ['text', 'type', 'data']),\n        ...payload.data\n      })\n      res.status(200).send({})\n    })\n  )\n\n  router.post(\n    '/conversations/:userId/:conversationId/reset',\n    asyncApi(async (req, res) => {\n      const { userId, conversationId } = req.params\n      const user = await getOrCreateUser(userId)\n\n      const payload = {\n        text: `Reset the conversation`,\n        type: 'session_reset'\n      }\n\n      await sendNewMessage(userId, conversationId, payload)\n      await bp.dialogEngine.stateManager.deleteState(user.id)\n      res.status(200).send({})\n    })\n  )\n\n  router.post('/conversations/:userId/new', async (req, res) => {\n    const { userId } = req.params\n\n    await createConversation(userId)\n\n    res.sendStatus(200)\n  })\n\n  router.get('/:userId/reference', async (req, res) => {\n    try {\n      const { params: { userId }, query: { ref: webchatUrlQuery } } = req\n      const state = await bp.dialogEngine.stateManager.getState(userId)\n      const newState = { ...state, webchatUrlQuery }\n\n      await bp.dialogEngine.stateManager.setState(userId, newState)\n\n      res.status(200)\n    } catch (error) {\n      res.status(500)\n    }\n  })\n\n  const getMessageContent = message => {\n    switch (message.message_type) {\n      case 'file':\n        return message.message_data.url\n      case 'text':\n        return message.message_text\n      default:\n        return `Event (${message.message_type})`\n    }\n  }\n\n  const convertToTxtFile = async conversation => {\n    const { messages } = conversation\n    const user = await getUserProfile(conversation.userId)\n    const timeFormat = 'MM/DD/YY HH:mm'\n\n    const metadata = `Title: ${conversation.title}\\r\\nCreated on: ${moment(conversation.created_on).format(\n      timeFormat\n    )}\\r\\nUser: ${user.first_name} ${user.last_name}\\r\\n-----------------\\r\\n`\n\n    const messagesAsTxt = messages.map(message => {\n      if (message.message_type === 'session_reset') {\n        return ''\n      }\n\n      return `[${moment(message.sent_on).format(timeFormat)}] ${message.full_name}: ${getMessageContent(message)}\\r\\n`\n    })\n\n    return [metadata, ...messagesAsTxt].join('')\n  }\n\n  router.get('/conversations/:userId/:conversationId/download/txt', async (req, res) => {\n    const { userId, conversationId } = req.params || {}\n\n    if (!validateUserId(userId)) {\n      return res.status(400).send(ERR_USER_ID_REQ)\n    }\n\n    const conversation = await getConversation(userId, conversationId)\n    const txt = await convertToTxtFile(conversation)\n\n    res.send({ txt, name: `${conversation.title}.txt` })\n  })\n\n  return router\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/api.js","module.exports = require(\"multer\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"multer\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"multer-s3\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"multer-s3\"\n// module id = 13\n// module chunks = 0","module.exports = require(\"aws-sdk\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"aws-sdk\"\n// module id = 14\n// module chunks = 0","module.exports = \"'use strict';\\n\\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\\n\\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\\n\\nvar injectDOMElement = function injectDOMElement(tagName, targetSelector) {\\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\\n\\n  var element = document.createElement(tagName);\\n  Object.keys(options).forEach(function (key) {\\n    return element[key] = options[key];\\n  });\\n  document.querySelector(targetSelector).appendChild(element);\\n  return element;\\n};\\n\\nwindow.addEventListener('message', function (_ref) {\\n  var data = _ref.data;\\n\\n  if (!data || !data.type || data.type !== 'setClass') {\\n    return;\\n  }\\n  document.querySelector('#bp-widget').setAttribute('class', data.value);\\n});\\n\\nvar init = function init(_ref2) {\\n  var _ref2$host = _ref2.host,\\n      host = _ref2$host === undefined ? '' : _ref2$host,\\n      _ref2$hideWidget = _ref2.hideWidget,\\n      hideWidget = _ref2$hideWidget === undefined ? false : _ref2$hideWidget,\\n      config = _objectWithoutProperties(_ref2, ['host', 'hideWidget']);\\n\\n  var cssHref = host + '/api/botpress-platform-webchat/inject.css';\\n  injectDOMElement('link', 'head', { rel: 'stylesheet', href: cssHref });\\n\\n  var options = encodeURIComponent(JSON.stringify({ hideWidget: hideWidget, config: config }));\\n  var iframeSrc = host + '/lite/?m=channel-web&v=embedded&options=' + options;\\n  var iframeHTML = '<iframe id=\\\\'bp-widget\\\\' frameborder=\\\\'0\\\\' src=\\\\'' + iframeSrc + '\\\\' />';\\n  injectDOMElement('div', 'body', { id: 'bp-web-widget', innerHTML: iframeHTML });\\n\\n  var iframeWindow = document.querySelector('#bp-web-widget > #bp-widget').contentWindow;\\n  var configure = function configure(payload) {\\n    return iframeWindow.postMessage({ action: 'configure', payload: payload }, '*');\\n  };\\n  var sendEvent = function sendEvent(payload) {\\n    return iframeWindow.postMessage({ action: 'event', payload: payload }, '*');\\n  };\\n\\n  window.botpressWebChat = _extends({}, window.botpressWebChat, { configure: configure, sendEvent: sendEvent });\\n};\\n\\nwindow.botpressWebChat = { init: init };\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./src/inject.js\n// module id = 15\n// module chunks = 0","module.exports = \".bp-widget-web {\\n  border: none;\\n  display: block;\\n  position: fixed;\\n  visibility: none;\\n  z-index: 100000;\\n  max-height: 100vh;\\n  max-width: 100vw;\\n  transition: none;\\n  background: none transparent;\\n  opacity: 1;\\n  font-size: 16px;\\n  letter-spacing: 0;\\n  -webkit-font-smoothing: antialiased;\\n  padding: 0;\\n}\\n\\n.bp-widget-widget {\\n  top: auto;\\n  left: auto;\\n  bottom: 24px;\\n  right: 36px;\\n  width: 76px !important;\\n  height: 76px !important;\\n}\\n\\n.bp-widget-convo {\\n  top: auto;\\n  left: auto;\\n  bottom: 24px;\\n  right: 36px;\\n  width: 420px !important;\\n  min-height: 382px !important;\\n  max-height: 500px !important;\\n}\\n\\n.bp-widget-side {\\n  top: 0px;\\n  left: auto;\\n  bottom: 0px;\\n  right: 0px;\\n  width: 360px;\\n  height: 100% !important;\\n}\\n\\n@media only screen and (max-device-width: 768px) {\\n  .bp-widget-side {\\n    width: 100%;\\n  }\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./src/inject.css\n// module id = 16\n// module chunks = 0","module.exports = require(\"serve-static\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"serve-static\"\n// module id = 17\n// module chunks = 0","module.exports = require(\"uuid\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"uuid\"\n// module id = 18\n// module chunks = 0","module.exports = require(\"ms\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ms\"\n// module id = 19\n// module chunks = 0","module.exports = require(\"botpress\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"botpress\"\n// module id = 20\n// module chunks = 0","export const sanitizeUserId = userId => userId.replace(/webchat:/gi, '')\n\n\n\n// WEBPACK FOOTER //\n// ./src/util.js","module.exports = require(\"sillyname\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"sillyname\"\n// module id = 22\n// module chunks = 0","module.exports = {\n\t\"name\": \"@botpress/channel-web\",\n\t\"version\": \"10.41.0\",\n\t\"description\": \"An embeddable web chat for Botpress bots\",\n\t\"main\": \"bin/node.bundle.js\",\n\t\"homepage\": \"https://github.com/botpress/modules\",\n\t\"botpress\": {\n\t\t\"menuText\": \"Web Chat\",\n\t\t\"menuIcon\": \"chrome_reader_mode\",\n\t\t\"webBundle\": \"bin/web.bundle.js\",\n\t\t\"noInterface\": true,\n\t\t\"plugins\": [\n\t\t\t{\n\t\t\t\t\"entry\": \"WebBotpressUIInjection\",\n\t\t\t\t\"position\": \"overlay\"\n\t\t\t}\n\t\t]\n\t},\n\t\"publishConfig\": {\n\t\t\"access\": \"public\"\n\t},\n\t\"scripts\": {\n\t\t\"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n\t\t\"watch\": \"node webpack.js --watch\",\n\t\t\"compile\": \"node webpack.js --compile\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://github.com/botpress/modules\"\n\t},\n\t\"author\": \"Botpress\",\n\t\"license\": \"AGPL-3.0-only\",\n\t\"peerDependencies\": {\n\t\t\"botpress\": \">= 10.0.0\"\n\t},\n\t\"devDependencies\": {\n\t\t\"babel-core\": \"^6.26.0\",\n\t\t\"babel-loader\": \"^7.1.2\",\n\t\t\"babel-plugin-transform-async-to-generator\": \"^6.22.0\",\n\t\t\"babel-plugin-transform-decorators-legacy\": \"^1.3.4\",\n\t\t\"babel-plugin-transform-object-rest-spread\": \"^6.16.0\",\n\t\t\"babel-preset-latest\": \"^6.16.0\",\n\t\t\"babel-preset-react\": \"^6.24.0\",\n\t\t\"babel-preset-stage-0\": \"^6.16.0\",\n\t\t\"babel-register\": \"^6.18.0\",\n\t\t\"classnames\": \"^2.2.5\",\n\t\t\"copy-webpack-plugin\": \"^4.3.1\",\n\t\t\"core-js\": \"^2.4.1\",\n\t\t\"css-loader\": \"^0.28.8\",\n\t\t\"extract-text-webpack-plugin\": \"^3.0.2\",\n\t\t\"file-loader\": \"^1.1.6\",\n\t\t\"image-webpack-loader\": \"^3.4.2\",\n\t\t\"node-sass\": \"^4.9.3\",\n\t\t\"raw-loader\": \"^0.5.1\",\n\t\t\"react-chatview\": \"^0.2.5\",\n\t\t\"react-dropzone\": \"^3.13.1\",\n\t\t\"react-linkify\": \"^0.2.2\",\n\t\t\"react-resizable-box\": \"^2.0.4\",\n\t\t\"react-slick\": \"^0.15.4\",\n\t\t\"react-spinkit\": \"^3.0.0\",\n\t\t\"sass-loader\": \"^6.0.6\",\n\t\t\"slick-carousel\": \"^1.8.1\",\n\t\t\"snarkdown\": \"^1.2.2\",\n\t\t\"style-loader\": \"^0.19.1\",\n\t\t\"webpack\": \"^3.10.0\",\n\t\t\"webpack-node-externals\": \"^1.6.0\"\n\t},\n\t\"dependencies\": {\n\t\t\"aws-sdk\": \"^2.108.0\",\n\t\t\"axios\": \"^0.16.2\",\n\t\t\"bluebird\": \"^3.5.1\",\n\t\t\"date-fns\": \"^1.28.5\",\n\t\t\"lodash\": \"^4.17.4\",\n\t\t\"mime\": \"^2.0.3\",\n\t\t\"moment\": \"^2.18.1\",\n\t\t\"ms\": \"^2.1.1\",\n\t\t\"multer\": \"^1.3.0\",\n\t\t\"multer-s3\": \"^2.7.0\",\n\t\t\"query-string\": \"^5.0.1\",\n\t\t\"react-ga\": \"^2.4.1\",\n\t\t\"serve-static\": \"^1.12.3\",\n\t\t\"sillyname\": \"^0.1.0\",\n\t\t\"uuid\": \"^3.1.0\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./package.json\n// module id = 23\n// module chunks = 0","import _ from 'lodash'\nimport Promise from 'bluebird'\n\nimport users from './users'\nimport db from './db'\n\nconst outgoingTypes = ['text', 'login_prompt', 'file', 'carousel', 'custom']\n\nmodule.exports = async (bp, config) => {\n  const knex = await bp.db.get()\n  const { appendBotMessage, getOrCreateRecentConversation } = db(knex, config)\n  const { getOrCreateUser } = await users(bp, config)\n\n  const { botName = 'Bot', botAvatarUrl = null } = config || {}\n\n  bp.middlewares.register({\n    name: 'webchat.sendMessages',\n    type: 'outgoing',\n    order: 100,\n    handler: outgoingHandler,\n    module: 'botpress-platform-webchat',\n    description:\n      'Sends out messages that targets platform = webchat.' +\n      ' This middleware should be placed at the end as it swallows events once sent.'\n  })\n\n  async function outgoingHandler(event, next) {\n    if (event.platform !== 'webchat') {\n      return next()\n    }\n\n    if (!_.includes(outgoingTypes, event.type)) {\n      return next('Unsupported event type: ' + event.type)\n    }\n\n    const userId = (event.user && event.user.id) || event.raw.to\n    const user = await getOrCreateUser(userId)\n\n    const typing = parseTyping(event)\n\n    const conversationId =\n      _.get(event, 'raw.conversationId') ||\n      (await getOrCreateRecentConversation(user.id, {\n        ignoreLifetimeExpiry: true,\n        originatesFromUserMessage: false\n      }))\n\n    const socketId = user.userId.replace(/webchat:/gi, '')\n\n    if (typing) {\n      bp.events.emit('guest.webchat.typing', {\n        timeInMs: typing,\n        userId: null,\n        __room: 'visitor:' + socketId,\n        conversationId\n      })\n\n      await Promise.delay(typing)\n    }\n\n    const message = await appendBotMessage(botName, botAvatarUrl, conversationId, event)\n\n    Object.assign(message, {\n      __room: 'visitor:' + socketId // This is used to send to the relevant user's socket\n    })\n\n    bp.events.emit('guest.webchat.message', message)\n\n    // Resolve the event promise\n    event._promise && event._resolve && event._resolve()\n  }\n}\n\nfunction parseTyping(msg) {\n  if (msg.raw && !!msg.raw.typing) {\n    if (isNaN(msg.raw.typing)) {\n      return 1000\n    } else {\n      return Math.max(msg.raw.typing, 500)\n    }\n  }\n\n  return false\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/socket.js"],"sourceRoot":""}